/*  =========================================================================
    nmaya - A library for arranging stuff

    Copyright (c) the Contributors as noted in the AUTHORS file.
    This file is part of zbroker, the ZeroMQ broker project.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.
    =========================================================================
*/

#ifndef NMAYA_H_INCLUDED
#define NMAYA_H_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif

//  Include the library file with typdefs, public includes and public constants
#include "nmaya_library.h"

//  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
//  @warning Please edit the model at "api/nmaya.api" to make changes.
//  @interface
//  This API is a draft, and may change without notice.
#ifdef NMAYA_BUILD_DRAFT_API
//  *** Draft method, for development use, may change without warning ***
//  Constructor, creates a new Nmaya node.
NMAYA_EXPORT nmaya_t *
    nmaya_new (const char *directory);

//  *** Draft method, for development use, may change without warning ***
//  Destructor, destroys a Nmaya node.
NMAYA_EXPORT void
    nmaya_destroy (nmaya_t **self_p);

//  *** Draft method, for development use, may change without warning ***
//  Return specic item from specified arrangement
//  Caller owns return value and must destroy it when done.
NMAYA_EXPORT nmaya_arrangement_t *
    nmaya_pluck (nmaya_t *self, const char *arrangement_key, int position);

//  *** Draft method, for development use, may change without warning ***
//  Return the Nmaya version for run-time API detection
NMAYA_EXPORT void
    nmaya_version (int *major, int *minor, int *patch);

//  *** Draft method, for development use, may change without warning ***
//  Self test of this class.
NMAYA_EXPORT void
    nmaya_test (bool verbose);

#endif // NMAYA_BUILD_DRAFT_API
//  @end

#ifdef __cplusplus
}
#endif

#endif
